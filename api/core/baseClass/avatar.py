from typing import Tuple
from api.core.baseClass.character import Character


时装选项属性 = {
    "神器": {
        "智力": 65,
        "体力": 65,
        "精神": 65,
        "力量": 65,
        "施放速度": 14,
        "移动速度": 7,
        "攻击速度": 7,
    },
    "稀有": {
        "智力": 55,
        "体力": 55,
        "精神": 55,
        "力量": 55,
        "施放速度": 12,
        "移动速度": 6,
        "攻击速度": 6,
    },
    "高级": {
        "智力": 45,
        "体力": 45,
        "精神": 45,
        "力量": 45,
        "施放速度": 12,
        "移动速度": 5,
        "攻击速度": 5,
    }
}


class 时装:
    部位: str
    品质: str
    选项集合: Tuple[str]

    def 效果(self, 角色: Character, 选项: str):
        if 选项 in self.选项集合:
            数值 = 时装选项属性[self.品质][选项]
            角色.基础属性加成(*{[选项]: 数值})


class 神器时装头发(时装):
    部位 = "头发"
    品质 = "神器"
    选项集合 = ("智力", "精神", "施放速度")


class 神器时装帽子(时装):
    部位 = "帽子"
    品质 = "神器"
    选项集合 = ("智力", "精神", "施放速度")


class 神器时装脸部(时装):
    部位 = "帽子"
    品质 = "神器"
    选项集合 = ("攻击速度")


class 神器时装胸部(时装):
    部位 = "胸部"
    品质 = "神器"
    选项集合 = ("攻击速度")


class 神器时装上衣(时装):
    部位 = "上衣"
    品质 = "神器"
    选项集合 = ()


class 神器时装腰带(时装):
    部位 = "腰带"
    品质 = "神器"
    选项集合 = ("力量", "体力")


class 神器时装下装(时装):
    部位 = "下装"
    品质 = "神器"
    选项集合 = ()


class 神器时装鞋(时装):
    部位 = "鞋"
    品质 = "神器"
    选项集合 = ("力量", "体力", "移动速度")


class 稀有时装头发(时装):
    部位 = "头发"
    品质 = "稀有"
    选项集合 = ("智力", "精神", "施放速度")


class 稀有时装帽子(时装):
    部位 = "帽子"
    品质 = "稀有"
    选项集合 = ("智力", "精神", "施放速度")


class 稀有时装脸部(时装):
    部位 = "帽子"
    品质 = "稀有"
    选项集合 = ("攻击速度")


class 稀有时装胸部(时装):
    部位 = "胸部"
    品质 = "稀有"
    选项集合 = ("攻击速度")


class 稀有时装上衣(时装):
    部位 = "上衣"
    品质 = "稀有"
    选项集合 = ()


class 稀有时装腰带(时装):
    部位 = "腰带"
    品质 = "稀有"
    选项集合 = ("力量", "体力")


class 稀有时装下装(时装):
    部位 = "下装"
    品质 = "稀有"
    选项集合 = ()


class 稀有时装鞋(时装):
    部位 = "鞋"
    品质 = "稀有"
    选项集合 = ("力量", "体力", "移动速度")


class 高级时装头发(时装):
    部位 = "头发"
    品质 = "高级"
    选项集合 = ("智力", "精神", "施放速度")


class 高级时装帽子(时装):
    部位 = "帽子"
    品质 = "高级"
    选项集合 = ("智力", "精神", "施放速度")


class 高级时装脸部(时装):
    部位 = "帽子"
    品质 = "高级"
    选项集合 = ("攻击速度")


class 高级时装胸部(时装):
    部位 = "胸部"
    品质 = "高级"
    选项集合 = ("攻击速度")


class 高级时装上衣(时装):
    部位 = "上衣"
    品质 = "高级"
    选项集合 = ()


class 高级时装腰带(时装):
    部位 = "腰带"
    品质 = "高级"
    选项集合 = ("力量", "体力")


class 高级时装下装(时装):
    部位 = "下装"
    品质 = "高级"
    选项集合 = ()


class 高级时装鞋(时装):
    部位 = "鞋"
    品质 = "高级"
    选项集合 = ("力量", "体力", "移动速度")


神器时装集合 = (神器时装头发, 神器时装帽子, 神器时装脸部, 神器时装胸部, 神器时装上衣, 神器时装腰带, 神器时装下装, 神器时装鞋)
稀有时装集合 = (稀有时装头发, 稀有时装帽子, 稀有时装脸部, 稀有时装胸部, 稀有时装上衣, 稀有时装腰带, 稀有时装下装, 稀有时装鞋)
高级时装集合 = (高级时装头发, 高级时装帽子, 高级时装脸部, 高级时装胸部, 高级时装上衣, 高级时装腰带, 高级时装下装, 高级时装鞋)

时装集合 = 神器时装集合 + 稀有时装集合 + 高级时装集合


class AvatarSuit:
    名称: str
    兼容于: str
    所需数量: int

    def 效果(self, 属性: Character):
        pass


class 神器时装3(AvatarSuit):
    名称 = "神器时装"
    兼容于 = "稀有时装"
    所需所需数量 = 3

    def 效果(self, 属性: Character):
        属性.基础属性加成(四维=50, 三速=3)


class 神器时装8(AvatarSuit):

    名称 = "神器时装"
    兼容于 = "稀有时装"
    所需所需数量 = 8

    def 效果(self, 属性: Character):
        属性.基础属性加成(四维=50, 三速=3)
        属性.所有属性强化加成(10)


class 稀有时装3(AvatarSuit):

    名称 = "稀有时装"
    所需所需数量 = 3

    def 效果(self, 属性: Character):
        属性.基础属性加成(四维=40, 三速=2)


class 稀有时装8(AvatarSuit):

    名称 = "稀有时装"
    所需所需数量 = 8

    def 效果(self, 属性: Character):
        属性.基础属性加成(四维=40, 三速=2)
        属性.所有属性强化加成(6)


class 节日时装8(AvatarSuit):

    名称 = "节日时装"
    所需所需数量 = 8

    def 效果(self, 属性: Character):
        属性.基础属性加成(四维=25, 三速=2)


class 高级时装3(AvatarSuit):

    名称 = "高级时装"
    所需所需数量 = 3

    def 效果(self, 属性: Character):
        属性.基础属性加成(四维=10)


class 高级时装8(AvatarSuit):

    名称 = "高级时装"
    所需所需数量 = 8

    def 效果(self, 属性: Character):
        属性.基础属性加成(四维=10, 三速=1)


时装套装集合 = (神器时装3, 神器时装8, 稀有时装3, 稀有时装8, 节日时装8, 高级时装3, 高级时装8)
